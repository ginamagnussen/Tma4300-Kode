n <- 10
mchain <- function(n){
s <- round(runif(n))
}
mchain <- function(n){
s <- round(runif(n))
return(s)
}
n <- 10
mchain <- function(n){
s <- round(runif(n))
return(s)
}
mchain(n)
runif()
n <- 10
alpha <- 0.5
mchain <- function(n){
sim <- rep(0,n)
for (i in 1:n){
rand <- runif(1)
if (rand < alpha){
sim[i] <- 1
}
}
}
mchain(n)
mchain <- function(n){
sim <- rep(0,n)
for (i in 1:n){
rand <- runif(1)
if (rand < alpha){
sim[i] <- 1
}
}
return(sim)
}
mchain(n)
mchain(n)
sum(mchain(n))
sum(mchain(n))
sum(mchain(n))
sum(mchain(n))
sum(mchain(n))
mchain <- function(n){
# FOR LOOP
# sim <- rep(0,n)
# for (i in 1:n){
#   rand <- runif(1)
#   if (rand < alpha){
#     sim[i] <- 1
#   }
# }
# VECTOR
rand <- runif(n)
sim <- rand < alpha
return(sim)
}
mchain(n)
mchain <- function(n){
# FOR LOOP
# sim <- rep(0,n)
# for (i in 1:n){
#   rand <- runif(1)
#   if (rand < alpha){
#     sim[i] <- 1
#   }
# }
# VECTOR
rand <- runif(n)
sim <- rand < alpha
return(sim)
}
mchain(n)*1
n <- 10
alpha <- 0.5
mchain <- function(n){
# FOR LOOP
# sim <- rep(0,n)
# for (i in 1:n){
#   rand <- runif(1)
#   if (rand < alpha){
#     sim[i] <- 1
#   }
# }
# VECTOR
rand <- runif(n)
sim <- rand < alpha
return(sim)
}
res <- mchain(n)*1
res <- mchain(n)
res
res*1
res <- mchain(n)
res
res*1
sum(res)
sum(res*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
n <- 100
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
sum(mchain(n)*1)
